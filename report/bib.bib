@article{acq_vol_android_mem,
    author = {Sylve, Joe and Case, Andrew and Marziale, Lodovico and Richard,
        Golden G.},
    citeulike-article-id = {13433922},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/j.diin.2011.10.003},
    doi = {10.1016/j.diin.2011.10.003},
    issn = {17422876},
    journal = {Digital Investigation},
    month = feb,
    number = {3-4},
    pages = {175--184},
    posted-at = {2014-11-19 17:20:31},
    priority = {2},
    title = {{Acquisition and analysis of volatile memory from android
        devices}},
    url = {http://dx.doi.org/10.1016/j.diin.2011.10.003},
    volume = {8},
    year = {2012}
}

@incollection{trust_dump,
    abstract = {{With the wide usage of smartphones in our daily life, new
        malware is emerging to compromise the mobile OS and steal the sensitive
    data from the mobile applications. Anti-malware tools should be
    continuously updated via static and dynamic malware analysis to detect and
    prevent the newest malware. Dynamic malware analysis depends on a reliable
    memory acquisition of the OS and the applications running on the
    smartphones. In this paper, we develop a TrustZone-based memory acquisition
    mechanism called TrustDump that is capable of reliably obtaining the RAM
    memory and CPU registers of the mobile OS even if the OS has crashed or has
    been compromised. The mobile OS is running in the TrustZone's normal
    domain, and the memory acquisition tool is running in the TrustZone's
    secure domain, which has the access privilege to the memory in the normal
    domain. Instead of using a hypervisor to ensure an isolation between the OS
    and the memory acquisition tool, we rely on ARM TrustZone to achieve a
    hardware-assisted isolation with a small trusted computing base (TCB) of
    about 450 lines of code. We build a TrustDump prototype on Freescale i.MX53
    QSB.}},
    author = {Sun, He and Sun, Kun and Wang, Yuewu and Jing, Jiwu and Jajodia,
    Sushil},
    booktitle = {Computer Security - ESORICS 2014},
    citeulike-article-id = {13433920},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/978-3-319-11203-9\_12},
    citeulike-linkout-1 =
    {http://link.springer.com/chapter/10.1007/978-3-319-11203-9\_12},
    doi = {10.1007/978-3-319-11203-9\_12},
    editor = {Kuty{\l}owski, Miros{\l}aw and Vaidya, Jaideep},
    pages = {202--218},
    posted-at = {2014-11-19 17:18:34},
    priority = {2},
    publisher = {Springer International Publishing},
    series = {Lecture Notes in Computer Science},
    title = {{TrustDump: Reliable Memory Acquisition on Smartphones}},
    url = {http://dx.doi.org/10.1007/978-3-319-11203-9\_12},
    volume = {8712},
    year = {2014}
}

@inproceedings{frost_paper,
    abstract = {{At the end of 2011, Google released version 4.0 of its Android
    operating system for smartphones. For the first time, Android smartphone
        owners were supplied with a disk encryption feature that transparently
    encrypts user partitions. On the downside, encrypted smartphones are a
    nightmare for IT forensics and law enforcement, because brute force appears
    to be the only option to recover encrypted data by technical means.
    However, RAM contents are necessarily left unencrypted and, as we show,
    they can be acquired from live systems with physical access only. To this
        end, we present the data recovery tool Frost (Forensic Recovery of
                Scrambled Telephones). Using Galaxy Nexus devices from Samsung
    as an example, we show that it is possible to perform cold boot attacks
    against Android smartphones and to retrieve valuable information from RAM.
    This information includes personal messages, photos, passwords and the
    encryption key. Since smartphones get switched off only seldom, and since
    the tools that we provide must not be installed before the attack, our
    method can be applied in real cases.}},
    address = {Berlin, Heidelberg},
    author = {M\"{u}ller, Tilo and Spreitzenbarth, Michael},
    booktitle = {Proceedings of the 11th International Conference on Applied
        Cryptography and Network Security},
    citeulike-article-id = {13433917},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=2524555},
    citeulike-linkout-1 = {http://dx.doi.org/10.1007/978-3-642-38980-1\_23},
    doi = {10.1007/978-3-642-38980-1\_23},
    isbn = {978-3-642-38979-5},
    location = {Banff, AB, Canada},
    pages = {373--388},
    posted-at = {2014-11-19 17:16:53},
    priority = {2},
    publisher = {Springer-Verlag},
    series = {ACNS'13},
    title = {{FROST: Forensic Recovery of Scrambled Telephones}},
    url = {http://dx.doi.org/10.1007/978-3-642-38980-1\_23},
    year = {2013}
}

@inproceedings{citeulike:13433915,
    abstract = {{The prevalence of mobile platforms, the large market share of
    Android, plus the openness of the Android Market makes it a hot target for
    malware attacks. Once a malware sample has been identified, it is critical
    to quickly reveal its malicious intent and inner workings. In this paper we
    present DroidScope, an Android analysis platform that continues the
    tradition of virtualization-based malware analysis. Unlike current desktop
    malware analysis platforms, DroidScope reconstructs both the OS-level and
    Java-level semantics simultaneously and seamlessly. To facilitate custom
    analysis, DroidScope exports three tiered APIs that mirror the three levels
    of an Android device: hardware, OS and Dalvik Virtual Machine. On top of
    DroidScope, we further developed several analysis tools to collect detailed
    native and Dalvik instruction traces, profile API-level activity, and track
    information leakage through both the Java and native components using taint
    analysis. These tools have proven to be effective in analyzing real world
    malware samples and incur reasonably low performance overheads.}},
    address = {Berkeley, CA, USA},
    author = {Yan, Lok K. and Yin, Heng},
    booktitle = {Proceedings of the 21st USENIX Conference on Security
        Symposium},
    citeulike-article-id = {13433915},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=2362822},
    location = {Bellevue, WA},
    pages = {29},
    posted-at = {2014-11-19 17:13:51},
    priority = {2},
    publisher = {USENIX Association},
    series = {Security'12},
    title = {{DroidScope: Seamlessly Reconstructing the OS and Dalvik Semantic
    Views for Dynamic Android Malware Analysis}},
    url = {http://portal.acm.org/citation.cfm?id=2362822},
    year = {2012}
}

@inproceedings{citeulike:13433914,
    author = {Albano, P. and Castiglione, A. and Cattaneo, G. and De Santis,
        A.},
    booktitle = {Broadband and Wireless Computing, Communication and
        Applications (BWCCA), 2011 International Conference on},
    citeulike-article-id = {13433914},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/bwcca.2011.62},
    citeulike-linkout-1 =
    {http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=6103062},
    doi = {10.1109/bwcca.2011.62},
    institution = {Dipt. di Inf. R.M. Capocelli, Univ. degli Studi di Salerno,
    Fisciano, Italy},
    isbn = {978-1-4577-1455-9},
    keywords = {b},
    month = oct,
    pages = {380--385},
    posted-at = {2014-11-19 17:12:47},
    priority = {2},
    publisher = {IEEE},
    title = {{A Novel Anti-forensics Technique for the Android OS}},
    url = {http://dx.doi.org/10.1109/bwcca.2011.62},
    year = {2011}
}

@article{citeulike:13433913,
    author = {Thing, Vrizlynn L. L. and Ng, Kian-Yong and Chang, Ee-Chien},
    citeulike-article-id = {13433913},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/j.diin.2010.05.010},
    doi = {10.1016/j.diin.2010.05.010},
    issn = {17422876},
    journal = {Digital Investigation},
    month = aug,
    pages = {S74--S82},
    posted-at = {2014-11-19 17:12:24},
    priority = {2},
    title = {{Live memory forensics of mobile phones}},
    url = {http://dx.doi.org/10.1016/j.diin.2010.05.010},
    volume = {7},
    year = {2010}
}

@article{citeulike:13433912,
    abstract = {{The Android platform has been deployed across a wide range of
    devices, predominately mobile phones, bringing unprecedented common
        software features to a diverse set of devices independent of carrier
        and manufacturer. Modern digital forensics processes differentiate
        collection and analysis, with collection ideally only occurring once
        and the subsequent analysis relying upon proper collection. After
        exploring special device boot modes and Android's partitioning schema
        we detail the composition of an Android bootable image and discuss the
    creation of such an image designed for forensic collection. The major
    contribution of this paper is a general process for data collection of
    Android devices and related results of experiments carried out on several
    specific devices.}},
    address = {Amsterdam, The Netherlands, The Netherlands},
    author = {Vidas, Timothy and Zhang, Chengye and Christin, Nicolas},
    citeulike-article-id = {13433912},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=2296340},
    citeulike-linkout-1 = {http://dx.doi.org/10.1016/j.diin.2011.05.003},
    doi = {10.1016/j.diin.2011.05.003},
    issn = {1742-2876},
    journal = {Digit. Investig.},
    month = aug,
    pages = {S14--S24},
    posted-at = {2014-11-19 17:09:47},
    priority = {2},
    publisher = {Elsevier Science Publishers B. V.},
    title = {{Toward a General Collection Methodology for Android Devices}},
    url = {http://dx.doi.org/10.1016/j.diin.2011.05.003},
    volume = {8},
    year = {2011}
}

@incollection{sp_mem_anal_for,
    abstract = {{In this paper, we first identify the need to be equipped with
    the capability to perform raw volatile memory data acquisition from live
        smartphones. We then investigate and discuss the potential of different
    approaches to achieve this task on Symbian smartphones. Based on our
    initial analysis, we propose a simple, flexible and portable approach which
    can have a full-coverage view of the memory space, to acquire the raw
    volatile memory data from commercial Symbian smartphones. We develop the
    tool to conduct the proof-of-concept experiments on the phones, and are
    able to acquire the volatile memory data successfully. A discussion on the
    problems we have encountered, the solutions we have proposed and the
    observations we have made in this research is provided. With the acquired
    data, we conduct an analysis on the memory images of the identified memory
    regions of interest, and propose a methodology for the purpose of in-depth
    malware security and forensics analysis.}},
    author = {Thing, VrizlynnL and Chua, Zheng-Leong},
    booktitle = {Security and Privacy Protection in Information Processing
        Systems},
    citeulike-article-id = {13433906},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/978-3-642-39218-4\_17},
    citeulike-linkout-1 =
    {http://link.springer.com/chapter/10.1007/978-3-642-39218-4\_17},
    doi = {10.1007/978-3-642-39218-4\_17},
    editor = {Janczewski, LechJ and Wolfe, HenryB and Shenoi, Sujeet},
    pages = {217--230},
    posted-at = {2014-11-19 17:08:49},
    priority = {2},
    publisher = {Springer Berlin Heidelberg},
    series = {IFIP Advances in Information and Communication Technology},
    title = {{Smartphone Volatile Memory Acquisition for Security Analysis and
    Forensics Investigation}},
    url = {http://dx.doi.org/10.1007/978-3-642-39218-4\_17},
    volume = {405},
    year = {2013}
}

@online{case2011,
    author={Andrew Case},
    title={Memory Analysis of the Dalvik Virtual Machine},
    year={2011},
    journal={Seattle 2011, presentation and video.}
}

@incollection{citeulike:13433905,
    abstract = {{Smartphones have become an integral part of people's lives.
        Their wide range of capabilities and support of diverse applications
            result in a wealth of data being stored in smartphone memory.
            Although tools are available to extract and view the data stored in
    smartphones, no comprehensive process exists for event reconstruction using
    the extracted data. Data in smartphones is typically stored in SQLite
    databases and can, therefore, be easily transformed. To perform event
    reconstruction, multiple SQLite databases have to be integrated. This paper
    proposes a novel mobile event reconstruction process that allows for event
    reconstruction by querying the integrated SQLite databases collected from
    multiple smartphones. The process can create detailed accounts of the
    events that took place before, during and after an incident.}},
    author = {Pieterse, Heloise and Olivier, Martin},
    booktitle = {Advances in Digital Forensics X},
    citeulike-article-id = {13433905},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/978-3-662-44952-3\_16},
    citeulike-linkout-1 =
    {http://link.springer.com/chapter/10.1007/978-3-662-44952-3\_16},
    doi = {10.1007/978-3-662-44952-3\_16},
    editor = {Peterson, Gilbert and Shenoi, Sujeet},
    pages = {237--251},
    posted-at = {2014-11-19 17:08:02},
    priority = {2},
    publisher = {Springer Berlin Heidelberg},
    series = {IFIP Advances in Information and Communication Technology},
    title = {{Smartphones as Distributed Witnesses for Digital Forensics}},
    url = {http://dx.doi.org/10.1007/978-3-662-44952-3\_16},
    volume = {433},
    year = {2014}
}

@online{holger,
    author={Holger Macht},
    year={2013},
    title={Live Memory Forensics on Android with Volatility - Dipolma Thesis},
    url={http://www.homac.de/publications/Live\_Memory\_Forensics\_on\_Android\_with\_Volatility.pdf}
}

@article{heriyanto2013procedures,
  title={Procedures And Tools For Acquisition And Analysis Of Volatile Memory On Android Smartphones},
  author={Heriyanto, Andri P},
  year={2013},
  publisher={SRI Security Research Institute, Edith Cowan University, Perth, Western Australia}
}

@book{the_art_of_mem,
    author = {Ligh, Michael H. and Case, Andrew and Levy, Jamie and Walters, AAron},
    citeulike-article-id = {13443978},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/1118825098},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/1118825098},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/1118825098},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/1118825098},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/1118825098/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/1118825098},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/1118825098},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN1118825098},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=1118825098\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/1118825098},
    day = {28},
    edition = {1},
    howpublished = {Paperback},
    isbn = {1118825098},
    month = jul,
    posted-at = {2014-12-03 11:31:09},
    priority = {0},
    publisher = {Wiley},
    title = {{The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/1118825098},
    year = {2014}
}

@article{prot_aslr,
    abstract = {{Writable XOR executable (W⊕X) and address space layout randomisation (ASLR) have elevated the understanding necessary to perpetrate buffer overflow exploits[1]. However, they have not proved to be a panacea[1–3], and so other mechanisms, such as stack guards and prelinking, have been introduced. In this paper, we show that host-based protection still does not offer a complete solution. To demonstrate the protection inadequacies, we perform an over the network brute force return-to-libc attack against a preforking concurrent server to gain remote access to a shell. The attack defeats host protection including W⊕X and ASLR. We then demonstrate that deploying a network intrusion detection systems (NIDS) with appropriate signatures can detect this attack efficiently.}},
    author = {Day, DavidJ and Zhao, Zheng-Xu},
    booktitle = {International Journal of Automation and Computing},
    citeulike-article-id = {10112476},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/s11633-011-0606-0},
    citeulike-linkout-1 = {http://www.springerlink.com/content/7284l28350725205},
    citeulike-linkout-2 = {http://link.springer.com/article/10.1007/s11633-011-0606-0},
    day = {1},
    doi = {10.1007/s11633-011-0606-0},
    issn = {1476-8186},
    journal = {International Journal of Automation and Computing},
    month = nov,
    number = {4},
    pages = {472--483},
    posted-at = {2014-12-03 12:48:10},
    priority = {2},
    publisher = {Institute of Automation, Chinese Academy of Sciences},
    title = {{Protecting against address space layout randomisation (ASLR) compromises and return-to-libc attacks using network intrusion detection systems}},
    url = {http://dx.doi.org/10.1007/s11633-011-0606-0},
    volume = {8},
    year = {2011}
}

